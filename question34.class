public class Solution {
    public int GetNumberOfK(int [] array , int k) {
       int len=array.length;
       int number=0;
       if(array!=null&&len>0){
           int first=getFirstK(array,len,k,0,len-1);
           int last=getLastK(array,len,k,0,len-1);
           if(first>-1&&last>-1){
               number=last-first+1;
           }
       }
        return number;
    }
    public int getFirstK(int[] array,int len,int k,int start,int end){
        if(start>end) return -1;
        int midIndex=(start+end)>>1;
        int midData=array[midIndex];
        if(midData==k){
            if((midIndex>0&&array[midIndex-1]!=k)||midIndex==0){
                return midIndex;
            }else{
                end=midIndex-1;
            }
        }else if(midData>k){
            end=midIndex-1;
        }else{
            start=midIndex+1;
        }
        return getFirstK(array,len,k,start,end);
    }
    public int getLastK(int[] array,int len,int k,int start,int end){
        if(start>end) return -1;
        int midIndex=(start+end)>>1;
        int midData=array[midIndex];
        if(midData==k){
            if((midIndex<len-1&&array[midIndex+1]!=k)||midIndex==len-1){
                return midIndex;
            }else{
                start=midIndex+1;
            }
        }else if(midData<k){
            start=midIndex+1;
        }else{
            end=midIndex-1;
        }
        return getLastK(array,len,k,start,end);
    }
}
